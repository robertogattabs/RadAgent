% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Filter.R
\name{FIL.2D.conv.Filter.voxelVolumes}
\alias{FIL.2D.conv.Filter.voxelVolumes}
\title{a new kind of filtering able to work on geoLet objects}
\usage{
FIL.2D.conv.Filter.voxelVolumes(study.VV, ROI.VV, filter.pipeline,
  pixelSpacingArr, collection = "default", cropResult = TRUE,
  scaleFactor = "voxel", cropImageVoxelCube_inProcessing = TRUE,
  ROINameForNormalization = NA)
}
\arguments{
\item{filter.pipeline}{is a \code{list} where is indicated the pipeline of filtering to be applied (in sequence)}

\item{collection}{is the collection: the default is '\code{default}'}

\item{cropResult}{is a boolean (\code{TRUE} or \code{FALSE}) which indicates if the result should be cropped or not, in order to save memory. Default is \code{TRUE}}

\item{scaleFactor}{can be 'voxel' or 'space'. If 'voxel' (the default) it consider the sam sigma values (if specified) for all the geoLet object, if 'space' it normalize the sigma according to the different pixelSpacing.}

\item{ROINameForNormalization}{the name of the ROI used to normalize the signal}

\item{obj.geoLet}{is the \code{new.mmButo} object}

\item{valueForNormalization}{the highest value used to normalize the 'ROINameForNormalization' voxel values}

\item{ROIName}{the name of the ROI to extract}

\item{ROINameForNormalization}{Optional, default \code{NA}. If you want to normalize the voxelCubes accoring to some specific ROIs (i.e. Urin) you can indicate here the ROIName. By this way, the other parameter \code{upperValueForNormalization}. Signals into such ROIS will be aligned at the biggest.}
}
\value{
a list containing the filtered images (cropped or not)
}
\description{
It applies filter to an geoLet object to simplify RADIOMICS issues
}
\examples{
\dontrun{
# Create an instante of new.mmButo and load some cases
obj<-geoLet()
obj$openDICOMFolder("/progetti/immagini/urinaEasy")

# build the filtering pipeline
filterPipeline<- list()
filterPipeline[[1]]<-list("kernel.type"="LoG", "sigma"=1.5)

# filter the images (normalizing the GTV signal with Urin) cropping the result
a<-FIL.2D.conv.Filter(obj.geoLet = obj,ROIName = "GTV",ROINameForNormalization='Urina', valueForNormalization=10000,filter.pipeline = filterPipeline )

# if you want to normalize with the signal in urins, for example:
a<-FIL.2D.conv.Filter(obj.geoLet = obj,ROIName = "GTV",ROINameForNormalization='Urina', valueForNormalization=10000,filter.pipeline = filterPipeline , ROINameForNormalization = "Urina")
}
}
